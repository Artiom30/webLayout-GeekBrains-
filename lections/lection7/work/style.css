/* ----------------------------------------------
 * Generated by Animista on 2023-7-1 21:47:10
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation heartbeat
 * ----------------------------------------
 */
@-webkit-keyframes heartbeat {
	from {
		-webkit-transform: scale(1);
		transform: scale(1);
		-webkit-transform-origin: center center;
		transform-origin: center center;
		-webkit-animation-timing-function: ease-out;
		animation-timing-function: ease-out;
	}

	10% {
		-webkit-transform: scale(0.91);
		transform: scale(0.91);
		-webkit-animation-timing-function: ease-in;
		animation-timing-function: ease-in;
	}

	17% {
		-webkit-transform: scale(0.98);
		transform: scale(0.98);
		-webkit-animation-timing-function: ease-out;
		animation-timing-function: ease-out;
	}

	33% {
		-webkit-transform: scale(0.87);
		transform: scale(0.87);
		-webkit-animation-timing-function: ease-in;
		animation-timing-function: ease-in;
	}

	45% {
		-webkit-transform: scale(1);
		transform: scale(1);
		-webkit-animation-timing-function: ease-out;
		animation-timing-function: ease-out;
	}
}

* {
	margin: 0;
	padding: 0;
}

body {
	font-family: 'Raleway', sans-serif;
}

.center {
	padding-left: calc(50% - 580px);
	padding-right: calc(50% - 580px);
}

a {
	text-decoration: none;
}

.header {
	padding-top: 30px;
	padding-bottom: 30px;
	background: rgb(17, 170, 178);
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	gap: 32px;
	flex-wrap: wrap;
	align-items: center;
}

.header__link {
	font-style: no;
	font-weight: 400;
	font-size: 20px;
	line-height: 23px;
	color: white;
}

/*Пример эффекта наведения*/
.header__link:hover {
	color: orange;
}

/*Пример эффекта нажатия*/
.header__link:active {
	color: red;
}

/* Пример :first-child (так же есть :first-of-type - ищет  первый по типу элемент по типу элемента) */
.header__link:first-child {
	text-decoration: underline;
}

/* Пример :last-child */
.header__link:last-child {
	border-right: 1px solid orange;
	padding-right: 32px;
}

/* Пример :nth-child()*/
.header__link:nth-child(2n-1) {

	/* n - это коэффициент . 2n обратиться к каждому второму элементу. */

	/* а (2n-1) обратиться к каждому второму и отнимет 1 , то есть обращение будет к 1 , 3 , 5 , 7 итд. ( нечётным) */
	background-color: #ccc;
}

.top {
	padding-top: 84px;
	padding-bottom: 84px;
	display: flex;
	flex-direction: row;
	justify-content: center;
	gap: 32px;
	flex-wrap: wrap;
	align-items: center;
}

.title {
	width: 578px;
	font-style: normal;
	font-weight: 700;
	font-size: 96px;
	line-height: 113px;
	color: rgba(10, 10, 120, 0.209);
	mix-blend-mode: normal;
}

/* Пример свойства transition */
.button {
	display: block;
	width: 190px;
	height: 60px;
	border: 1px solid purple;
	text-align: center;
	line-height: 60px;
	color: purple;
	font-size: 20px;
	margin-top: 16px;
	transition: all .3s;
	animation: heartbeat 1.5s ease-in-out both;
}

.button:hover {
	background-color: purple;
	color: #fff;
}

.about {
	background: rgba(10, 10, 120, 0.209);
	padding-top: 64px;
	padding-bottom: 194px;
}

.heading {
	font-style: normal;
	font-weight: 700;
	font-size: 48px;
	line-height: 80px;
	color: rgba(10, 10, 120, 0.209);
	mix-blend-mode: normal;
}

.about__content {
	margin-top: 50px;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-items: center;
	justify-content: space-between;
	align-content: center;
}

.about__txt {
	width: 462px;
	font-style: normal;
	font-weight: 300;
	font-size: 18px;
	line-height: 30px;
	color: #7D7987;
	mix-blend-mode: normal;
}

/* Псевдоэлемент для модификатора класса одного из элементов li */

/* .list__item_new::after {
	content: " new!";
	color: red;
} */

/* Комбинация псевдоэлемента и псевдокласса */

/* При наведении на определённый элемент html , будет отображаться псевдо-элемент с контентом */

/* Внимание ! последовательность записи селектора важна ! */
.list__item:hover::after {
	content: " <<";
}

/* Добавление эффекта наведения для тега <svg> и изображением (иконка) */

/* При наведении на элемент с классом .icon , задать стили дочернему элементу с названием тега path */
.icon:hover path {
	fill: blue;
}

/* Пример со свойство transition-timing-function */
.drive {
	margin-top: 32px;
}

.drive:hover .car {
	/* При наведении на блок drive отступ слева у дочернего блока с классом car будет 1000px */
	margin-left: 1000px;
}

/* Именно свойство margin у блока car поменяем свойством transition */
.car {
	margin-bottom: 5px;
	width: 150px;
	height: 50px;
	border: 1px solid black;
	transition: margin-left 3s;
}

/* C помощью готовых названий из библиотеки-графика "кубик-безьер" изменяем характер изменения элемента во времени */
.car1 {
	transition-timing-function: ease;
}

.car2 {
	transition-timing-function: ease-in;
}

.car3 {
	transition-timing-function: ease-in-out;
}

.car4 {
	transition-timing-function: ease-out;
}

.car5 {
	transition-timing-function: linear;
}



/* Пример свойства transform и его значений ( translate,scale, rotate , skew ) */
.bord {
	height: 400px;
	display: flex;
	justify-content: center;
	align-items: center;
	gap: 15px;
}

/* Можно представить что каждый bord__item - это карточка товаров , и её нужно сметить в центр относительно остальных */
/* 
.bord__item {
	margin-bottom: 5px;
	width: 200px;
	height: 150px;
	border: 1px solid black;
	transition: transform 1s;
}
 */
/* Сместим каждый элемент с помощью свойства transform в момент наведения на него*/

/* А для плавности изменения (transform) нужно указать для всех bord__item свойство transition */
/* 
.bord__item-1:hover {
	transform: translate(200px, -30px) scale(1.3);
}

.bord__item-2:hover {
	transform: translate(-10px) scale(1.3);
}

.bord__item-3:hover {
	transform: translate(-200px, -30px) scale(1.3);
}
 */



/* Значение свойства trasform :rotate();  */
/* 
.bord__item {
	width: 150px;
	height: 86px;
	background-color: green;
	transition: transform 1s;
}

.bord__item-1 {
	transform: rotate(30deg);
}

.bord__item-2 {
	transform: rotate(-67deg);
}

.bord__item-3 {
	transform: rotate(-30deg);
}
 */


/* Значение свойства 	transform: skew();  */

.bord__item {
	width: 150px;
	height: 86px;
	background-color: green;
	transition: transform 1s;
}

.bord__item-1 {
	transform: skew(15deg);
}









@media (max-width:1024px) {

	h1 {
		font-size: 24px;
	}

	.item {
		/* background-color: orange; */
		width: 50vw;
		/* поделят экран на 2 части */
		height: 250px;
	}
}

@media (max-width:767px) {

	h1 {
		font-size: 18px;
		text-align: center;
	}

	.item {
		width: 100vw;
		height: 200px;
	}
}

@media(min-width:768px) {
	body {
		padding: 32px;
	}
}

@media (min-width:768px) and (max-width:1024px) {
	h1 {
		text-decoration: underline;
	}
}